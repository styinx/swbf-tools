name: Release

env:
  BUILD_TYPE: Release
  VCPKG_ROOT: '${{ github.workspace }}/vcpkg'

on:
  pull_request:
    branches: [ "release/**" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Restore artifacts
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.VCPKG_ROOT }}
          !${{ env.VCPKG_ROOT }}/buildtrees
          !${{ env.VCPKG_ROOT }}/packages
          !${{ env.VCPKG_ROOT }}/downloads
          !${{ env.VCPKG_ROOT }}/installed 
        key: |
          ${{ hashFiles( 'vcpkg.json' ) }}-${{ hashFiles( '.git/modules/vcpkg/HEAD' )}}-${{ matrix.triplet }}

    - name: Bootstrap vcpkg
      run: |
        cd ${{ env.VCPKG_ROOT }}
        bootstrap-vcpkg.bat

    - name: Integrate vcpkg
      run: |
        cd ${{ env.VCPKG_ROOT }}
        vcpkg.exe integrate install

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DDIR_VCPKG_ROOT:PATH="${{ env.VCPKG_ROOT }}" -DVCPKG_MANIFEST_INSTALL:PATH="${{ env.VCPKG_ROOT }}\installed\" -DVCPKG_TARGET_TRIPLET:STRING="${{ env.arch }}-windows-static" -DCMAKE_TOOLCHAIN_FILE:PATH="${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake" -Wno-dev

    - name: Build
      run: cmake --build ${{ github.workspace }}/cmake --config ${{ env.BUILD_TYPE }} && ls

    - name: Create Release Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: SWBF-Tools
        path: |
          "${{ github.workspace }}\SWBF-Tools-Launcher.exe"
          "${{ github.workspace }}\swbf-tools.dll"

